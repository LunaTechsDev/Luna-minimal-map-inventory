//=============================================================================
// Luna_MinimalMapInventory.js
//=============================================================================
//=============================================================================
// Build Date: 2020-10-09 21:21:15
//=============================================================================
//=============================================================================
// Made with LunaTea -- Haxe
//=============================================================================

// Generated by Haxe 4.1.3
/*:
@author LunaTechs - Kino
@plugindesc A plugin that creates a inventory menu on the map scene<LunaMMI>.

@target MV MZ

@param linkWindows
@text Link Windows
@desc The list of link windows on your title screen.
@type struct<LinkWindow>[]

@help

A plugin that creates a inventory menu on the map scene<LunaMMI>.

==== How To Use ====



MIT License
Copyright (c) 2020 LunaTechsDev
Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:
The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE
*/

/*~struct~Empty:
*
* @param link
* @text Link 
* @desc The link for the link window
* @default google.com
*
* @param image
* @text Image Name
* @desc Name of an image in your pictures folder
* @default Actor1_1
*
* @param x
* @text X Position
* @desc The X position of the link window
* @default 0
* 
* @param y
* @text Y Position
* @desc The Y position of the link window
* @default 0
*
* @param width
* @text Width
* @desc The width of the link window
* @default 100
*
* @param height
* @text Height 
* @desc The height of the link window
* @default 100
*
* @param backgroundType
* @text Background Type 0 -> Opaque 1 -> Semitransparent 2 -> Transparent
* @desc The background type of the link window
* @default 2
* 
*/




(function ($hx_exports, $global) { "use strict"
class EReg {
	constructor(r,opt) {
		this.r = new RegExp(r,opt.split("u").join(""))
	}
	match(s) {
		if(this.r.global) {
			this.r.lastIndex = 0
		}
		this.r.m = this.r.exec(s)
		this.r.s = s
		return this.r.m != null;
	}
}
class LunaMMInventory {
	static main() {
		let _g = []
		let _g1 = 0
		let _g2 = $plugins
		while(_g1 < _g2.length) {
			let v = _g2[_g1]
			++_g1
			if(new EReg("<LunaLinks>","ig").match(v.description)) {
				_g.push(v)
			}
		}
		let plugin = _g[0]
		let params = plugin.parameters
		LunaMMInventory.Params = { linkWindows : JsonEx.parse(params["linkWindows"]).map(function(win) {
			return JsonEx.parse(win);
		})}
		console.log("src/Main.hx:43:",LunaMMInventory.Params)
		
//=============================================================================
// Scene_Map
//=============================================================================
      
	}
	static params() {
		return LunaMMInventory.Params;
	}
}
$hx_exports["LunaMMInventory"] = LunaMMInventory
class haxe_iterators_ArrayIterator {
	constructor(array) {
		this.current = 0
		this.array = array
	}
	hasNext() {
		return this.current < this.array.length;
	}
	next() {
		return this.array[this.current++];
	}
}
class _$LTGlobals_$ {
}
class utils_Fn {
	static proto(obj) {
		return obj.prototype;
	}
	static updateProto(obj,fn) {
		return (fn)(obj.prototype);
	}
	static updateEntity(obj,fn) {
		return (fn)(obj);
	}
}
LunaMMInventory.listener = new PIXI.utils.EventEmitter()
LunaMMInventory.main()
})(typeof exports != "undefined" ? exports : typeof window != "undefined" ? window : typeof self != "undefined" ? self : this, {})

//# sourceMappingURL=Luna_MinimalMapInventory.js.map